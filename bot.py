# bot.py
import os
import logging
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
TOKEN = os.getenv("TELEGRAM_TOKEN")

if not TOKEN:
    raise RuntimeError("TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤ .env –∏–ª–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –±–æ—Ç.\n"
        "–ó–∞–¥–∞–π –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å ‚Äî –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–Ω–∞–Ω–∏–π."
    )

# –í—Ä–µ–º–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    text = update.message.text
    logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user.full_name}: {text}")

    await update.message.reply_text(
        f"üì© –Ø –ø–æ–ª—É—á–∏–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å: *{text}*\n\n"
        "–°–∫–æ—Ä–æ —è –Ω–∞—É—á—É—Å—å –æ—Ç–≤–µ—á–∞—Ç—å –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É, –∏—Å–ø–æ–ª—å–∑—É—è —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ —Ç–µ–∫—Å—Ç—ã.",
        parse_mode='Markdown'
    )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))

    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
    app.run_polling()

if __name__ == "__main__":
    main()